extends ../layout
block content
  include ../bar.pug

  .content 
    img(class="serie-cover", src=serie.background, alt=title)
    .serie-infos
      h1.serie-title #{serie.title}
      small.serie-createdBy #{new Date(serie.createdAt).toLocaleDateString("pt-BR", { year: 'numeric', month: 'long', day: 'numeric' })} 
      p.serie-description #{serie.description}
      .serie-metrics  
        span.serie-metric <i class="fas fa-star"></i> 4.5
        span.serie-metric <i class="fas fa-heart"></i> #{serie.likes}
        span.serie-metric <i class="fas fa-eye"></i> #{serie.views}
      p.serie-cast 
        strong Estrelando: #{serie.cast}

      if serie.Seasons.length > 0
        a.serie-btn-play.d-flex-center(href="/watch/" + serie.Seasons[0].id + "/" + serie.Seasons[0].episodes[0].id) <i class="fas fa-play"></i> Assistir 

      h2.serie-title Temporadas & Episódios

      div.serie-seasons 
        each season, index in serie.Seasons
          button(class="btn-serie-season " + (index == 0 ? "active" : "") , data-btn-season="season"+ index) Temporada #{index + 1}: #{season.title}
    
      if serie.Seasons.length === 0
        h3.serie-episode-title Não há episódios disponíveis no momento.
      else
        each season, index in serie.Seasons
          div.serie-episodes(data-season="season"+ index, class=(index == 0 ? "active" : ""))
            each episode, index2 in season.episodes
              div.serie-episode(class=episode.visible === "true" ? "" : "episode-no-visible")
                if episode.visible === "true"
                  a(href="/watch/" + season.id + "/" + episode.id)
                    img(class="serie-episode-cover", src=episode.thumbnail, alt=episode.title)
                  div.serie-episode-infos
                    h3.serie-episode-title Episódio #{index2 + 1}: #{episode.title} 
                    .serie-metrics  
                      span.serie-metric <i class="fas fa-star"></i> 4.5
                      span.serie-metric <i class="fas fa-heart"></i> #{serie.likes}
                      span.serie-metric <i class="fas fa-eye"></i> #{serie.views}
                    p.serie-episode-description #{episode.description}
                    a.serie-btn-play(href="/watch/" + season.id + "/" + episode.id) <i class="fas fa-play"></i> Assistir 
                else
                  a
                    img(class="serie-episode-cover", src="/public/images/semioflix.png", alt=episode.title)
                  div.serie-episode-infos
                    h3.serie-episode-title Episódio #{index2 + 1}: #{episode.title} 
                    p.serie-episode-description #{episode.description}
                    a.serie-btn-play() <i class="fas fa-play"></i> Assistir 

  script. 
    const btnSeasons = document.querySelectorAll("[data-btn-season]");
    const episodes = document.querySelectorAll(".serie-episodes");

    btnSeasons.forEach((btn) => {
      btn.addEventListener("click", () => {
        const season = btn.getAttribute("data-btn-season");
        episodes.forEach((episode) => {
          episode.classList.remove("active");
        });
        document.querySelector(`[data-season="${season}"]`).classList.add("active");
        btnSeasons.forEach((btn) => {
          btn.classList.remove("active");
        });
        btn.classList.add("active");
      });
    });


